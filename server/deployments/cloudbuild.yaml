steps:
    # This step runs the unit tests on the app
      - name: 'node'
        id: Install
        entrypoint: /bin/bash
        args:
        - -c
        - | 
          cd server
          npm install
      - name: 'node'
        id: Test
        entrypoint: /bin/bash
        args:
        - -c
        - |
          cd server
          npm test
      - name: 'node'
        id: Build
        entrypoint: /bin/bash
        args:
        - -c
        - | 
          cd server
          npm run build
    # This step builds the container image.
      - name: 'gcr.io/cloud-builders/docker'
        id: Build Image
        entrypoint: /bin/bash
        args:
        - -c
        - |
          cd server
          docker build -t gcr.io/$PROJECT_ID/rc-user-service:$SHORT_SHA .
    # This step pushes the image to Container Registry
    # The PROJECT_ID and SHORT_SHA variables are automatically
    # replaced by Cloud Build.
      - name: 'gcr.io/cloud-builders/docker'
        id: Push
        args:
        - 'push'
        - 'gcr.io/$PROJECT_ID/rc-user-service:$SHORT_SHA'
    
    
    # This step clones the hello-cloudbuild-env repository
      - name: 'gcr.io/cloud-builders/gcloud'
        id: Clone env repository
        entrypoint: /bin/sh
        args:
        - '-c'
        - |
          gcloud source repos clone rc-user-service-manifets && \
          cd rc-user-service-manifets && \
          git checkout candidate && \
          git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
    # This step generates the new manifest
      - name: 'gcr.io/cloud-builders/gcloud'
        id: Generate manifest
        entrypoint: /bin/sh
        args:
        - '-c'
        - |
          cd 6Week/user-service/deployments
          sed "s/COMMIT_SHA/${SHORT_SHA}/g" rc-user-service-deployment.yaml.tpl > ../../../rc-user-service-manifets/deployment.yaml
    # This step pushes the manifest back to hello-cloudbuild-env
      - name: 'gcr.io/cloud-builders/gcloud'
        id: Push manifest
        entrypoint: /bin/sh
        args:
        - '-c'
        - |
          set -x && \
          cd rc-user-service-manifets && \
          git add deployment.yaml && \
          git commit -m "Deploying image gcr.io/${PROJECT_ID}/rc-user-service:${SHORT_SHA}
          Built from commit ${COMMIT_SHA} of repository rc-user-service
          Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
          git push origin candidate